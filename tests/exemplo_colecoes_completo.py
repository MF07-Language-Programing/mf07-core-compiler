"""
Exemplo simplificado focando nas funcionalidades b√°sicas das cole√ß√µes tipadas.
"""

import sys
import os

sys.path.insert(0, os.path.join(os.path.dirname(__file__), "src"))

from src.logging_config import setup_production_logging
from module import CorpLang


def main():
    print("=== Exemplo das Cole√ß√µes Tipadas ===")
    setup_production_logging()

    corp_lang = CorpLang()

    test_code = """
    # Definir interface b√°sica
    interface Item {
        intent getName(): string
        intent getValue(): int
    }
    
    # Implementar classe que segue a interface
    class Product implements Item {
        private var name: string
        private var value: int
        
        intent constructor(name: string, value: int) {
            this.name = name
            this.value = value
        }
        
        intent getName(): string {
            return this.name
        }
        
        intent getValue(): int {
            return this.value
        }
        
        intent toString(): string {
            return this.name + " (R$ " + "{this.value}" + ")"
        }
    }
    
    intent exemploColecoesTipadas() {
        print("=== Demonstra√ß√£o das Cole√ß√µes Tipadas ===")
        
        # 1. Lista tipada
        print("--- Lista tipada ---")
        var produtos = new List("Item")
        produtos.append(new Product("Notebook", 2500))
        produtos.append(new Product("Mouse", 150))
        produtos.append(new Product("Teclado", 200))
        
        print("Produtos na lista:")
        produtos.forEach(fn(produto) {
            print("- " + produto.toString())
        })
        
        # 2. HashMap tipado 
        print("")
        print("--- HashMap tipado ---")
        var estoque = new HashMap("string", "int")
        estoque.put("notebook", 5)
        estoque.put("mouse", 15) 
        estoque.put("teclado", 8)
        
        print("Estoque dispon√≠vel:")
        estoque.forEach(fn(id, qtd) {
            print("- " + id + ": " + "{qtd}" + " unidades")
        })
        print("Estoque completo:", estoque.toString())
        
        # 3. Set tipado
        print("")
        print("--- Set tipado ---")
        var categorias = new Set("string")
        categorias.add("Eletr√¥nicos")
        categorias.add("Inform√°tica")
        categorias.add("Perif√©ricos")
        categorias.add("Eletr√¥nicos") # Duplicado - ser√° ignorado
        
        print("Categorias √∫nicas:", categorias.toString())
        print("Total de categorias:", categorias.size())
        print("Tem 'Inform√°tica'?", categorias.has("Inform√°tica"))
        
        # 4. Opera√ß√µes avan√ßadas com Set
        print("")
        print("--- Opera√ß√µes com Set ---")
        var tags1 = new Set("string")
        tags1.add("novo")
        tags1.add("promo√ß√£o")
        tags1.add("destaque")
        
        var tags2 = new Set("string")
        tags2.add("promo√ß√£o")
        tags2.add("desconto")
        tags2.add("oferta")
        
        var union = tags1.union(tags2)
        var intersection = tags1.intersection(tags2)
        var difference = tags1.difference(tags2)
        
        print("Tags1:", tags1.toString())
        print("Tags2:", tags2.toString())
        print("Uni√£o:", union.toString())
        print("Interse√ß√£o:", intersection.toString()) 
        print("Diferen√ßa:", difference.toString())
        
        # 5. Filtragem e transforma√ß√£o
        print("")
        print("--- Filtragem e transforma√ß√£o ---")
        var numeros = new List("int")
        numeros.append(1)
        numeros.append(2)
        numeros.append(3)
        numeros.append(4)
        numeros.append(5)
        
        var pares = numeros.filter(fn(n) { return n % 2 == 0 })
        var dobrados = numeros.map(fn(n) { return n * 2 })
        
        print("N√∫meros:", numeros.toString())
        print("Pares:", pares.toString())
        print("Dobrados:", dobrados.toString())
        
        print("")
        print("üéâ Exemplo completo executado com sucesso!")
        print("‚úì List<T> - Lista tipada")
        print("‚úì HashMap<K,V> - Mapa chave-valor tipado")
        print("‚úì Set<T> - Conjunto tipado com opera√ß√µes")
        print("‚úì Interfaces funcionando")
        print("‚úì M√©todos funcionais (map, filter, forEach)")
        print("‚úì Opera√ß√µes de conjuntos (union, intersection, difference)")
    }
    
    exemploColecoesTipadas()
    """

    corp_lang.run(test_code)


if __name__ == "__main__":
    main()
